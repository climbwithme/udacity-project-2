Description: >
  S3 CloudFormation Setup
# Manjunath S C P / Udacity Project
# CD12352 - Infrastructure as Code Project - Network
# You'll need to create an S3 bucket with CloudFormation to store all static content. 
# This bucket should have public-read access.
# Your servers IAM Role should provide read and write permissions to this bucket.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "udacity-s3-udagram-static-manjunath"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: "Enabled"
            NoncurrentVersionExpirationInDays: 10
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPublicReadAccess
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${S3Bucket.Arn}/*"

  ServerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "ServerRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: S3ReadWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:DeleteObject"
                Resource: 
                  - !Sub "${S3Bucket.Arn}/*"
        - PolicyName: s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            # Allow describing CloudFormation stacks
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStacks'
                Resource: '*'

Outputs:
  S3BucketName:
    Description: "Name of the S3 bucket"
    Value: !Ref S3Bucket
    Export:
      Name: !Sub "${EnvironmentName}-S3BucketName"
